version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: digitalocean.com/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      #- dbdata:/var/lib/postgresql/
      - postgres:/data/postgres/
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      - webserver
      - db
    networks:
      - app-network
    secrets:
      - db-password

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8000:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network
    secrets:
      - db-password

  #postgres Service
  db:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    environment:
      - POSTGRES_DB:ach
      #- POSTGRES_PASSWORD_FILE=/run/secrets/db-password
      - POSTGRES_PASSWORD=password
      - PGDATA=/data/postgres
      #- POSTGRES_HOST_AUTH_METHOD=trust
    expose:
      - 5432
    ports:
      - "5432"
    volumes:
      - "postgres:/data/postgres"
      #- dbdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
      
  #proxy:
  #  image: nginx
  #  volumes:
  #    - type: bind
  #      source: ./proxy/nginx.conf
  #      target: /etc/nginx/conf.d/default.conf
  #      read_only: true
  #  ports:
  #    - 80:80
  #  depends_on: 
  #    - app

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  postgres:
  #dbdata:
  #  driver: local

secrets:
  db-password:
    file: db/password.txt
